{"version":3,"sources":["logo.svg","firebase.js","features/userSlice.js","App.js","app/store.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","provider","GoogleAuthProvider","userSlice","createSlice","name","initialState","userName","userEmail","reducers","setActiveUser","state","action","payload","setUserLogOutState","actions","selectUsername","user","selectUserEmail","App","dispatch","useDispatch","useSelector","className","src","logo","alt","onClick","signOut","then","catch","err","alert","message","signInWithPopup","result","displayName","email","configureStore","reducer","userReducer","ReactDOM","render","store","document","getElementById"],"mappings":"oLAAe,G,YAAA,IAA0B,kC,QCanCA,GAFcC,IAASC,cATN,CACnBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,gBACnBC,MAAO,+CAKEP,IAASD,QAChBS,EAAW,IAAIR,IAASD,KAAKU,mB,gBCJ7BC,EAAYC,YAAY,CAC1BC,KAAM,OACNC,aAPiB,CACjBC,SAAW,KACXC,UAAY,MAMZC,SAAU,CACNC,cAAe,SAACC,EAAOC,GACnBD,EAAMJ,SAAWK,EAAOC,QAAQN,SAChCI,EAAMH,UAAYI,EAAOC,QAAQL,WAErCM,mBAAoB,SAAAH,GAChBA,EAAMJ,SAAW,KACjBI,EAAMH,UAAY,S,EAKuBL,EAAUY,QAAhDL,E,EAAAA,cAAeI,E,EAAAA,mBAEjBE,EAAiB,SAAAL,GAAK,OAAIA,EAAMM,KAAKV,UACrCW,EAAkB,SAAAP,GAAK,OAAIA,EAAMM,KAAKT,WAEpCL,IAAf,Q,OCsBegB,MA1Cf,WAEE,IAAMC,EAAWC,cAEXd,EAAWe,YAAYN,GAoB7B,OAnBkBM,YAAYJ,GAoB5B,qBAAKK,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qDACA,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAM,SAGzCnB,EACE,wBAASgB,UAAY,YAAYI,QAfrB,WACpBnC,EAAKoC,UAAUC,MAAK,WAClBT,EAASN,QACRgB,OAAM,SAACC,GAAD,OAASC,MAAMD,EAAIE,aAYpB,uBAEA,wBAAQV,UAAY,YAAYI,QA1BrB,WACnBnC,EAAK0C,gBAAgBjC,GAAU4B,MAAK,SAACM,GACnCf,EAASV,EAAe,CACtBH,SAAW4B,EAAOlB,KAAKmB,YACvB5B,UAAa2B,EAAOlB,KAAKoB,aAsBrB,2BCzCGC,cAAe,CAC5BC,QAAS,CACPtB,KAAMuB,KCGVC,IAASC,OACL,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.3b275495.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.db36153e.svg\";","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAGppvkVdyAdWozjw3N9Sj4PlDtpzGiIMg\",\r\n    authDomain: \"auth-redux-76c87.firebaseapp.com\",\r\n    projectId: \"auth-redux-76c87\",\r\n    storageBucket: \"auth-redux-76c87.appspot.com\",\r\n    messagingSenderId: \"1091453164568\",\r\n    appId: \"1:1091453164568:web:01bf73362cdd1ef7e6776d\"\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\r\n\r\nconst auth = firebase.auth()\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\n\r\nexport {auth,provider}\r\n\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n//const [userName , setUsername] = useState(null)\r\n//const [userEmail , setUserEmail] = useState(null)\r\n\r\nconst initialState = {\r\n    userName : null,\r\n    userEmail : null\r\n}\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n        setActiveUser: (state, action) => {\r\n            state.userName = action.payload.userName  //setUsername and give in the action.payload\r\n            state.userEmail = action.payload.userEmail\r\n        },\r\n        setUserLogOutState: state => {\r\n            state.userName = null\r\n            state.userEmail = null\r\n        }\r\n    }\r\n});\r\n\r\nexport const { setActiveUser ,setUserLogOutState } = userSlice.actions\r\n\r\nexport const selectUsername = state => state.user.userName     //grab the user username from that specific state\r\nexport const selectUserEmail = state => state.user.userEmail\r\n\r\nexport default userSlice.reducer","import React from 'react';\r\nimport './App.css';\r\nimport logo from './logo.svg';\r\n\r\nimport {auth,provider} from './firebase'\r\n\r\nimport {useDispatch , useSelector} from 'react-redux'\r\n\r\nimport {setActiveUser , setUserLogOutState , selectUsername, selectUserEmail} from './features/userSlice'\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userName = useSelector(selectUsername)\r\n  const userEmail = useSelector(selectUserEmail)\r\n\r\n\r\n  const handleSignIn = () => {\r\n    auth.signInWithPopup(provider).then((result) => {\r\n      dispatch(setActiveUser ({\r\n        userName : result.user.displayName,\r\n        userEmail  : result.user.email\r\n      }))\r\n    })\r\n  }\r\n\r\n  const handleSignOut = () => {\r\n    auth.signOut().then(() => {\r\n      dispatch(setUserLogOutState()) \r\n    }).catch((err) => alert(err.message))                                 //set Everything to null \r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>User Authentication</h1>\r\n        <img src={logo} className=\"App-logo\" alt = \"logo\"/>\r\n\r\n        {\r\n          userName ? (\r\n            <button  className = \"btn_style\" onClick = {handleSignOut}> Sign Out</button>\r\n          ) : (\r\n            <button className = \"btn_style\" onClick = {handleSignIn}>Sign In</button>\r\n          )\r\n        }\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}